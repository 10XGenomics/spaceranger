#
# Copyright (c) 2024 10X Genomics, Inc. All rights reserved.
#
"""Collects all files that should go into the spatial directory."""

import os

import martian

import cellranger.cr_io as cr_io

__MRO__ = """
struct SpatialFolder(
    jpg     aligned_fiducials              "Slide image annotated with fiducial alignment",
    jpg     detected_tissue_image          "Slide image annotated with detected tissue",
    json    scalefactors_json              "Scale factors for hires and lowres images and fiducial and spot diameters",
    json    tissue_transform_json          "Transform learned in tissue registration",
    png     tissue_hires_image             "Slide image scaled to 2000px in the largest dimension",
    png     tissue_lowres_image            "Slide image scaled to 600px in the largest dimension",
    tiff    cytassist_image                "RGB brightfield image generated by CytAssist instrument",
    jpg     aligned_tissue_image           "Registration image between CytAssist image and microscope image",
    csv     tissue_positions               "Slide position and tissue status of barcodes (csv)",
    parquet tissue_positions_parquet       "Slide position and tissue status of barcodes (parquet)"                    "tissue_positions.parquet",
    csv     spatial_enrichment             "Per feature Moran's I CSV",
    csv     barcode_fluorescence_intensity "Fluorescence intensity at spot CSV",
)

stage SPATIAL_FOLDER_COLLECTOR(
    in  jpg           aligned_fiducials,
    in  jpg           detected_tissue_image,
    in  json          scalefactors,
    in  json          tissue_transform_json,
    in  png           tissue_hires_image,
    in  png           tissue_lowres_image,
    in  tiff          cytassist_image,
    in  jpg           aligned_tissue_image,
    in  csv           tissue_positions,
    in  csv           spatial_enrichment,
    in  csv           barcode_fluorescence_intensity,
    in  bool          is_visium_hd,
    out SpatialFolder spatial,
    src py            "stages/spatial/collate_spatial_folder",
)
"""


def main(args, outs):
    ### combine all spatial outs into an `spatial` path
    spatial_folder = martian.make_path("spatial").decode()
    os.makedirs(spatial_folder, exist_ok=True)

    ### copy input arguments destined for outs.spatial
    spatial_file_list = [
        ("tissue_hires_image", args.tissue_hires_image),
        ("tissue_lowres_image", args.tissue_lowres_image),
        ("cytassist_image", args.cytassist_image),
        ("scalefactors_json", args.scalefactors if not args.is_visium_hd else None),
        ("tissue_transform_json", args.tissue_transform_json),
        ("detected_tissue_image", args.detected_tissue_image),
        ("qc_resampled_cyta_img", args.qc_resampled_cyta_img),
        ("qc_regist_target_img", args.qc_regist_target_img),
        ("aligned_tissue_image", args.aligned_tissue_image),
        ("tissue_positions", args.tissue_positions),
        ("aligned_fiducials", args.aligned_fiducials),
        ("spatial_enrichment", args.spatial_enrichment),
        ("barcode_fluorescence_intensity", args.barcode_fluorescence_intensity),
        ("tissue_positions_parquet", None),
    ]

    outs.spatial = {}
    for key, src_path in spatial_file_list:
        if src_path is not None and os.path.exists(src_path):
            _, src_base = os.path.split(src_path)  # peel off the dirname
            full_path = os.path.join(spatial_folder, src_base)
            cr_io.hardlink_with_fallback(src_path, full_path)
        else:
            full_path = None
        outs.spatial[key] = full_path
